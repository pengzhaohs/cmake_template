#######################################################################################
#
#	Copy Right : ZSoft R&D
#
#######################################################################################


CMAKE_MINIMUM_REQUIRED(VERSION 3.1.0 FATAL_ERROR)

PROJECT(ZSoft_Solution)

IF(DEFINED ZS_QT_ROOT)
	SET(CMAKE_PREFIX_PATH "${ZS_QT_ROOT};${CMAKE_PREFIX_PATH}")
ELSE()
	MESSAGE(FATAL_ERROR "Please specify the ZS_QT_ROOT")
ENDIF()

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/CMakeModules;${CMAKE_MODULE_PATH}")

MESSAGE("CMAKE_MODULE_PATH=${CMAKE_MODULE_PATH}")

FIND_PACKAGE(Qt5 REQUIRED Widgets)

SET(CMAKE_INCLUDE_CURRENT_DIR ON)

MESSAGE("Qt5Widgets_FOUND=${Qt5Widgets_FOUND}")
MESSAGE("Qt5Widgets_INCLUDE_DIRS=${Qt5Widgets_INCLUDE_DIRS}")
MESSAGE("Qt5Widgets_LIBRARIES=${Qt5Widgets_LIBRARIES}")

SET(ZS_ROOT_DIR ${CMAKE_SOURCE_DIR})
SET(ZS_SOURCE_DIR ${ZS_ROOT_DIR}/source)
SET(ZS_SDK_INCLUDE_DIR ${ZS_SOURCE_DIR}/include)
SET(ZS_THIRDPARTY_DIR ${ZS_ROOT_DIR}/thirdparty)

MESSAGE("ZS_ROOT_DIR=${ZS_ROOT_DIR}")
MESSAGE("ZS_SOURCE_DIR=${ZS_SOURCE_DIR}")
MESSAGE("ZS_SDK_INCLUDE_DIR=${ZS_SDK_INCLUDE_DIR}")
MESSAGE("ZS_THIRDPARTY_DIR=${ZS_THIRDPARTY_DIR}")

INCLUDE(ZSoftPlatformDetermine)
INCLUDE(ZSoftMacroUtils)
INCLUDE(ZSoftGlobalSetting)
INCLUDE(ZSoftApplySetting)

IF(ZS_WINDOWS)
	ADD_DEFINITIONS(-DZS_PLATFORM_WINDOWS)
ENDIF(ZS_WINDOWS)

IF(ZS_MAC)
	ADD_DEFINITIONS(-DZS_PLATFORM_MAC)
ENDIF(ZS_MAC)

IF(ZS_UNIX)
	ADD_DEFINITIONS(-DZS_PLATFORM_UNIX)
ENDIF(ZS_UNIX)

ADD_SUBDIRECTORY(source)

#SET(CPACK_GENERATOR "NSIS;ZIP;TGZ;7Z")

INCLUDE(CPack)
#cpack_add_component(application)

#GET_CMAKE_PROPERTY(res VARIABLES)
#FOREACH(var ${res})
#	IF(var MATCHES "^CPACK")	
#		MESSAGE("${var}=${${var}}")
#	ENDIF()
#ENDFOREACH()

